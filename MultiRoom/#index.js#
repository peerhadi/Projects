import {Player} from "./Player.js";
import {Sprite} from "./Sprite.js";
import {
    collisionsLevel1,
    collisionsLevel2,
    collisionsLevel3,
} from "./collisions.js";
import {parse2D, PSG} from "./utils.js";

const canvas = document.querySelector("canvas");
const c = canvas.getContext("2d");

export let level = 1;
let parsedCollisions;
export let collisionBlocks;

let background;

canvas.width = 64 * 16;
canvas.height = 64 * 9;

export const player = new Player({
    imageSrc: "./king/idle.png",
    frameRate: 11,
    animations: {
        idleRight: {
            frameRate: 11,
            frameBuffer: 2,
            imageSrc: "./king/idle.png",
            loop: true,
        },
        idleLeft: {
            frameRate: 11,
            frameBuffer: 2,
            loop: true,
            imageSrc: "./king/idleLeft.png",
        },
        runLeft: {
            frameRate: 7,
            frameBuffer: 4,
            loop: true,
            imageSrc: "./king/runLeft.png",
        },
        runRight: {
            frameRate: 7,
            frameBuffer: 4,
            loop: true,
            imageSrc: "./king/runRight.png",
        },
        enterDoor: {
            frameRate: 8,
            frameBuffer: 4,
            loop: false,
            imageSrc: "./king/enterDoor.png",
            onCompelete: () => {
                gsap.to(overlay, {
                    opacity: 1,
                    onComplete: () => {
                        level++;

                        if (level >= 4) level = 1;
                        levels[level].init();

                        if (level === 3)
                            player.switchSprite("idleLeft");
                        else player.switchSprite("idleRight");
                        player.preventInput = false;
                        gsap.to(overlay, {
                            opacity: 0,
                        });
                    },
                });
            },
        },
    },
});

let levels = {
    1: {
        init: () => {
            parsedCollisions = parse2D(collisionsLevel1);
            if (player.currentAnimation) {
                player.currentAnimation.isActive = false;
            }
            collisionBlocks = PSG(parsedCollisions);
            
            player.collisionBlocks = collisionBlocks;
            background = new Sprite({
                position: {
                    x: 0,
                    y: 0,
                },
                imageSrc: "./backgroundLevel1.png",
            });
            
            doors = [
                new Sprite({
                    position: {
                        x: 760,
                        y: 270,
                    },
                    imageSrc: "./doorOpen.png",
                    frameRate: 5,
                    frameBuffer: 5,
                    loop: false,
                    autoplay: false,
                }),
            ];
        },
    },
    2: {
        init: () => {
            if (player.currentAnimation) {
                player.currentAnimation.isActive = false;
            }
            
            parsedCollisions = parse2D(collisionsLevel2);
            collisionBlocks = PSG(parsedCollisions);
            player.collisionBlocks = collisionBlocks;
            player.position.x = 96;
            player.position.y = 140;
            
            background = new Sprite({
                position: {
                    x: 0,
                    y: 0,
                },
                imageSrc: "./backgroundLevel2.png",
            });
            
            doors = [
                new Sprite({
                    position: {
                        x: 772,
                        y: 336,
                    },
                    imageSrc: "./doorOpen.png",
                    frameRate: 5,
                    frameBuffer: 5,
                    loop: false,
                    autoplay: false,
                }),
            ];
        },
    },
    3: {
        init: () => {
            if (player.currentAnimation) {
                player.currentAnimation.isActive = false;
            }
            parsedCollisions = parse2D(collisionsLevel3);
            collisionBlocks = PSG(parsedCollisions);
            player.collisionBlocks = collisionBlocks;
            player.position.x = 750;
            player.position.y = 230;
            
            background = new Sprite({
                position: {
                    x: 0,
                    y: 0,
                },
                imageSrc: "./backgroundLevel3.png",
            });
            
            doors = [
                new Sprite({
                    position: {
                        x: 176,
                        y: 335,
                    },
                    imageSrc: "./doorOpen.png",
                    frameRate: 5,
                    frameBuffer: 5,
                    loop: false,
                    autoplay: false,
                }),
            ];
        },
    },
};

export let doors;

export const keys = {
    w: {
        pressed: false,
    },
    a: {
        pressed: false,
    },
    d: {
        pressed: false,
    },
};

const overlay = {
    opacity: 0,
};

function animate() {
    requestAnimationFrame(animate);

    background.draw();

    collisionBlocks.forEach((collisionBlock) => {
        collisionBlock.draw();
    });

    doors.forEach((door) => {
        door.draw();
    });

    player.handleInput(keys);
    player.draw();
    player.update();

    c.save();
    c.globalAlpha = overlay.opacity;
    c.fillStyle = "black";
    c.fillRect(0, 0, canvas.width, canvas.height);
    c.restore();
}

levels[level].init();
animate();
